<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wannengyongyao.drug.dao.DrugStoreMapper">
  <resultMap id="Store" type="com.wannengyongyao.drug.model.DrugStore">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="classify" jdbcType="VARCHAR" property="classify" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="district" jdbcType="VARCHAR" property="district" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="last_updated_time" jdbcType="TIMESTAMP" property="lastUpdatedTime" />
    <result column="status" jdbcType="INTEGER" property="status" />
  </resultMap>

  <sql id="Base_Column_List">
    id, name, classify, address, district, remark, create_time,
    last_updated_time, status
  </sql>

  <select id="get" parameterType="java.lang.Integer" resultMap="Store">
    select 
    <include refid="Base_Column_List" />
    from drug_store
    where id = #{id,jdbcType=INTEGER}
  </select>

  <insert id="insert" parameterType="com.wannengyongyao.drug.model.DrugStore">
    insert into drug_store (
      name,
      classify,
      address,
      phone,
      district,
      geom,
      remark,
      create_time,
      last_updated_time,
      status
      )
    values (
      #{name,jdbcType=VARCHAR},
      #{classify,jdbcType=VARCHAR},
      #{address,jdbcType=VARCHAR},
      #{phone,jdbcType=VARCHAR},
      #{district,jdbcType=VARCHAR},
      ST_GeomFromText(#{geom}),
      #{remark,jdbcType=VARCHAR},
      #{createTime,jdbcType=TIMESTAMP},
      #{lastUpdatedTime,jdbcType=TIMESTAMP},
      #{status,jdbcType=INTEGER}
      )
  </insert>

  <select id="nearby" resultType="com.wannengyongyao.drug.model.DrugStore">
    SELECT
      id,
      name,
      address,
      classify,
      ROUND(ST_Distance_Sphere(Point(#{lon}, #{lat}), geom )/1000, 1) AS distance
    FROM
      drug_store
    WHERE
      ST_Contains (
        ST_MakeEnvelope (
          Point (( #{lon} + ( #{distance} / 111.12 )), ( #{lat} + ( #{distance} / 111.12 ))),
          Point (( #{lon} - ( #{distance} / 111.12 )), ( #{lat} - ( #{distance} / 111.12 )))
        ), geom
      )
    ORDER BY distance ASC
  </select>

  <select id="list" resultMap="Store">
    SELECT
      id,
      name,
      address,
      classify,
      district
    FROM
      drug_store
    WHERE
      status = 0
    <if test="name != null">
      AND name LIKE CONCAT('%',#{name},'%')
    </if>
    <if test="province != null">
      AND district LIKE CONCAT(#{province},'%')
    </if>
    <if test="city != null">
      AND district LIKE CONCAT(#{city},'%')
    </if>
    <if test="district != null">
      AND district = #{district}
    </if>
  </select>
</mapper>