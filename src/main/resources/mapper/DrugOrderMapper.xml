<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wannengyongyao.drug.dao.DrugOrderMapper">
  <resultMap id="Order" type="com.wannengyongyao.drug.model.DrugOrder">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="seller_id" jdbcType="INTEGER" property="sellerId" />
    <result column="seller_name" jdbcType="VARCHAR" property="sellerName" />
    <result column="seller_store_id" jdbcType="INTEGER" property="sellerStoreId" />
    <result column="seller_store_name" jdbcType="VARCHAR" property="sellerStoreName" />
    <result column="payment" jdbcType="VARCHAR" property="payment" />
    <result column="pay_amount" jdbcType="DECIMAL" property="payAmount" />
    <result column="order_amount" jdbcType="DECIMAL" property="orderAmount" />
    <result column="reward_amount" jdbcType="DECIMAL" property="rewardAmount" />
    <result column="discount_amount" jdbcType="DECIMAL" property="discountAmount" />
    <result column="expected_amount" jdbcType="DECIMAL" property="expectedAmount" />
    <result column="service_charge" jdbcType="DECIMAL" property="serviceCharge" />
    <result column="freight" jdbcType="DECIMAL" property="freight" />
    <result column="shipping_way" jdbcType="VARCHAR" property="shippingWay" />
    <result column="pay_time" jdbcType="TIMESTAMP" property="payTime" />
    <result column="shipping_time" jdbcType="TIMESTAMP" property="shippingTime" />
    <result column="sign_time" jdbcType="TIMESTAMP" property="signTime" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="confirm_time" jdbcType="TIMESTAMP" property="confirmTime" />
    <result column="order_status" jdbcType="INTEGER" property="orderStatus" />
    <result column="shipping_status" jdbcType="INTEGER" property="shippingStatus" />
    <result column="shipping_company" jdbcType="VARCHAR" property="shippingCompany" />
    <result column="shipping_id" jdbcType="VARCHAR" property="shippingId" />
    <result column="seller_num" jdbcType="INTEGER" property="sellerNum" />
    <result column="settlement_status" jdbcType="INTEGER" property="settlementStatus" />
    <result column="collection_store" jdbcType="VARCHAR" property="collectionStore" />
    <result column="collection_store_id" jdbcType="INTEGER" property="collectionStoreId" />
    <result column="collection_code" jdbcType="VARCHAR" property="collectionCode" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="mobile" jdbcType="VARCHAR" property="mobile" />

    <result column="coupon_code" jdbcType="VARCHAR" property="couponCode" />

    <collection property="drugs" ofType="com.wannengyongyao.drug.model.DrugOrderGoods">
      <id column="d_id" jdbcType="INTEGER" property="id" />
      <result column="order_id" jdbcType="BIGINT" property="orderId" />
      <result column="drug_id" jdbcType="INTEGER" property="drugId" />
      <result column="drug_name" jdbcType="VARCHAR" property="drugName" />
      <result column="unit_price" jdbcType="DECIMAL" property="unitPrice" />
      <result column="specifications" jdbcType="VARCHAR" property="specifications" />
      <result column="quantity" jdbcType="INTEGER" property="quantity" />
      <result column="manufacturer" jdbcType="VARCHAR" property="manufacturer" />
      <result column="photos" jdbcType="VARCHAR" property="photos" />
      <result column="remark" jdbcType="VARCHAR" property="remark" />
      <result column="d_create_time" jdbcType="TIMESTAMP" property="createTime" />
    </collection>
  </resultMap>
  <sql id="Base_Column_List">
    o.id,
    user_id,
    user_name,
    seller_id,
    seller_name,
    seller_store_id,
    seller_store_name,
    payment,
    pay_amount,
    pay_status,
    order_amount,
    reward_amount,
    discount_amount,
    expected_amount,
    service_charge,
    freight,
    shipping_way,
    pay_time,
    shipping_time,
    sign_time,
    o.create_time,
    confirm_time,
    order_status,
    shipping_status,
    shipping_company,
    shipping_id,
    seller_num,
    collection_store,
    collection_store_id,
    collection_code,
    address
  </sql>
  <select id="get" parameterType="java.lang.Long" resultMap="Order">
    select 
    <include refid="Base_Column_List" />
    from drug_order
    where id = #{id,jdbcType=BIGINT}
  </select>

  <insert id="insert" parameterType="com.wannengyongyao.drug.model.DrugOrder">
    insert into drug_order (
      id,
      user_id,
      user_name,
      payment,
      reward_amount,
      discount_amount,
      expected_amount,
      service_charge,
      freight,
      create_time,
      order_status,
      shipping_status,
      seller_num,
      collection_store,
      collection_store_id,
      address,
      coupon_code)
    values (
      #{id,jdbcType=BIGINT},
      #{userId,jdbcType=BIGINT},
      #{userName,jdbcType=VARCHAR},
      #{payment,jdbcType=VARCHAR},
      #{rewardAmount,jdbcType=DECIMAL},
      #{discountAmount,jdbcType=DECIMAL},
      #{expectedAmount,jdbcType=DECIMAL},
      #{serviceCharge,jdbcType=DECIMAL},
      #{freight,jdbcType=DECIMAL},
      #{createTime,jdbcType=TIMESTAMP},
      #{orderStatus,jdbcType=INTEGER},
      #{shippingStatus,jdbcType=INTEGER},
      #{sellerNum,jdbcType=INTEGER},
      #{collectionStore,jdbcType=VARCHAR},
      #{collectionStoreId,jdbcType=INTEGER},
      #{address,jdbcType=VARCHAR},
      #{couponCode,jdbcType=VARCHAR})
  </insert>

  <select id="getOrderStatus" resultType="com.wannengyongyao.drug.model.DrugOrder">
    SELECT
      id,
      user_id as userId,
      seller_id as sellerId,
      collection_store_id as collectionStoreId,
      order_status as orderStatus,
      pay_status as payStatus,
      shipping_status as shippingStatus,
      reward_amount as rewardAmount,
      discount_amount as discountAmount,
      service_charge as serviceCharge,
      order_amount as orderAmount,
      freight,
      collection_code as collectionCode
    FROM
      drug_order
    WHERE
      id = #{orderId}
  </select>

  <select id="getSettleOrder" resultType="com.wannengyongyao.drug.model.DrugOrder">
    SELECT
      id,
      user_id as userId,
      seller_id as sellerId,
      collection_store_id as collectionStoreId,
      order_status as orderStatus,
      pay_status as payStatus,
      shipping_status as shippingStatus,
      sign_time as signTime,
      order_amount as orderAmount,
      freight,
      service_charge as serviceCharge,
      reward_amount as rewardAmount,
      discount_amount as discountAmount,
      settlement_status as settlementStatus
    FROM
      drug_order
    WHERE
      id = #{orderId}
  </select>

  <update id="changeOrderStatus">
    UPDATE
      drug_order
    SET
      order_status = #{status, jdbcType=INTEGER}
    WHERE
      id = #{orderId}
  </update>

  <select id="list" resultMap="Order">
    SELECT
      o.*,
      g.id as d_id,
      g.create_time as d_create_time,
      g.drug_id,
      g.drug_name,
      g.unit_price,
      g.specifications,
      g.quantity,
      g.manufacturer,
      g.photos,
      g.remark
    FROM
    (
      SELECT
        id,
        seller_id,
        seller_name,
        seller_store_name,
        expected_amount,
        reward_amount,
        service_charge,
        freight,
        collection_store,
        collection_store_id,
        shipping_company,
        shipping_id,
        address,
        mobile,
        order_status,
        seller_num,
        create_time
      FROM
        drug_order
      WHERE
        user_id = #{userId}
      <if test="status != null">
        AND order_status = #{status}
      </if>
      <if test="waiting != null">
        <![CDATA[ AND (order_status > 0 AND order_status < 1009 ) ]]>
      </if>
      <if test="grab != null">
        AND seller_num = 0  <!-- 报价人数 -->
      </if>
      <if test="unconfirmed != null">
        AND seller_num > 0
      </if>
      ORDER BY create_time DESC
      LIMIT #{start}, #{pageSize}
    ) o
    INNER join
      drug_order_goods g
    ON
      o.id = g.order_id
    ORDER BY o.create_time DESC
  </select>

  <select id="orderDetail" resultMap="Order">
    SELECT
      <include refid="Base_Column_List" />,
      g.id as d_id,
      g.create_time as d_create_time,
      g.drug_id,
      g.drug_name,
      g.unit_price,
      g.specifications,
      g.quantity,
      g.manufacturer,
      g.photos,
      g.remark
    FROM
      drug_order o
    INNER join
      drug_order_goods g
    ON
      o.id = g.order_id
    WHERE
      o.id = #{orderId}
    AND
      o.order_status != -1
  </select>

  <update id="confirm" parameterType="com.wannengyongyao.drug.model.DrugOrder">
    UPDATE drug_order
    SET
      order_amount = #{orderAmount},
      order_status = #{orderStatus},
      confirm_time = #{confirmTime},
      seller_id = #{sellerId},
      seller_name = #{sellerName},
      seller_store_name = #{sellerStoreName},
      seller_store_id= #{sellerStoreId}
    WHERE
      id = #{id}
  </update>

  <!-- 药师待抢订单列表 -->
  <select id="listSellerGrab" resultMap="Order">
    SELECT
      o.*,
      g.id as d_id,
      g.create_time as d_create_time,
      g.drug_id,
      g.drug_name,
      g.unit_price,
      g.specifications,
      g.quantity,
      g.manufacturer,
      g.photos,
      g.remark
    FROM
    (
      SELECT
        d.id,
        d.user_id,
        d.user_name,
        d.order_amount,
        d.discount_amount,
        d.expected_amount,
        d.reward_amount,
        d.service_charge,
        d.freight,
        d.collection_store,
        d.collection_store_id,
        d.address,
        d.order_status,
        d.create_time
      FROM
        drug_order d
      LEFT JOIN
        drug_seller_order so
      ON
        d.id = so.order_id
      WHERE
        d.order_status = 0
      AND
        (so.seller_id != #{sellerId} OR so.seller_id is null)
      ORDER BY d.create_time DESC
      LIMIT #{start}, #{pageSize}
    ) o
    INNER join
      drug_order_goods g
    ON
      o.id = g.order_id
    ORDER BY o.create_time DESC
  </select>

  <!-- 药师订单列表 -->
  <select id="listSeller" resultMap="Order">
    SELECT
      o.*,
      g.id as d_id,
      g.create_time as d_create_time,
      g.drug_id,
      g.drug_name,
      g.unit_price,
      g.specifications,
      g.quantity,
      g.manufacturer,
      g.photos,
      g.remark
    FROM
    (
      SELECT
        id,
        user_id,
        user_name,
        order_amount,
        discount_amount,
        expected_amount,
        reward_amount,
        service_charge,
        freight,
        collection_store,
        collection_store_id,
        shipping_company,
        shipping_id,
        address,
        mobile,
        order_status,
        create_time
      FROM
        drug_order
      WHERE
        order_status = #{status}
      AND
        seller_id = #{sellerId}
      ORDER BY create_time DESC
      LIMIT #{start}, #{pageSize}
    ) o
    INNER join
      drug_order_goods g
    ON
      o.id = g.order_id
    ORDER BY o.create_time DESC
  </select>

  <!-- 待取货订单列表 -->
  <select id="listCollection" resultMap="Order">
    SELECT
      o.*,
      g.id as d_id,
      g.create_time as d_create_time,
      g.drug_id,
      g.drug_name,
      g.unit_price,
      g.specifications,
      g.quantity,
      g.manufacturer,
      g.photos,
      g.remark
    FROM
    (
      SELECT
        id,
        user_id,
        user_name,
        discount_amount,
        expected_amount,
        order_amount,
        reward_amount,
        service_charge,
        freight,
        collection_store,
        collection_store_id,
        address,
        mobile,
        shipping_id,
        shipping_company,
        shipping_status,
        order_status,
        create_time
      FROM
        drug_order
      WHERE
        order_status = 1008
      AND
        pay_status = 1
      AND
        collection_store_id = #{storeId}
      ORDER BY create_time DESC
      LIMIT #{start}, #{pageSize}
    ) o
    INNER join
      drug_order_goods g
    ON
      o.id = g.order_id
    ORDER BY o.create_time DESC
  </select>

  <!-- 卖家发货 -->
  <update id="sellerShipping" parameterType="com.wannengyongyao.drug.model.DrugOrder">
    UPDATE
      drug_order
    SET
      order_status = #{orderStatus},
      shipping_status = #{shippingStatus},
      shipping_time = #{shippingTime},
      shipping_company = #{shippingCompany},
      shipping_id = #{shippingId},
      shipping_way = #{shippingWay},
      collection_code = #{collectionCode}
    WHERE
      id = #{id}
  </update>

  <!-- 确认收货 -->
  <update id="sellerCollection" parameterType="com.wannengyongyao.drug.model.DrugOrder">
    UPDATE
      drug_order
    SET
      order_status = #{orderStatus},
      shipping_status = #{shippingStatus},
      sign_time = #{signTime}
    WHERE
      id = #{id}
  </update>

  <update id="increaseSellerNum">
    UPDATE
      drug_order
    SET
      seller_num = seller_num + 1
    WHERE
      id = #{id}
  </update>

  <update id="changeOrderSettlementStatus">
    UPDATE
      drug_order
    SET
      settlement_status = 1
    WHERE
      id = #{id}
  </update>

  <select id="listUnSettlementOrder" resultType="com.wannengyongyao.drug.model.DrugOrder">
    select
      id,
      sign_time as signTime
    from
      drug_order
    where
      order_status = 1009
    and
      pay_status = 1
    and
      settlement_status = 0
  </select>

  <select id="getSellerOrderTotal" resultType="java.lang.Integer">
    select count(*)
    from
      drug_order
    where
      seller_id = #{sellerId}
  </select>

  <update id="addRewardAmount">
    UPDATE drug_order
    SET
      reward_amount = reward_amount + #{amount}
    WHERE
      id = #{id}
  </update>

  <insert id="insertOrderShare" parameterType="com.wannengyongyao.drug.model.DrugOrderShare">
    INSERT INTO drug_order_share (
      order_id,
      open_id,
      share_type,
      create_time)
    VALUES(
      #{orderId},
      #{openid},
      #{shareType},
      #{createTime}
    )
  </insert>

  <select id="getOrderShare" resultType="java.util.Map">
    select
      order_id,
      share_type,
      COUNT(open_id) as total,
      COUNT(distinct open_id) as man
    from
      drug_order_share
    where
      order_id = #{orderId}
    GROUP BY
      order_id, share_type;
  </select>

  <update id="collectionOrder">
    UPDATE drug_order
    SET
      shipping_status = 2,
      collection_time = now()
    WHERE
      id = #{orderId}
  </update>

  <update id="payment">
    UPDATE drug_order
    SET
      pay_status = 1,
      pay_time = now()
    WHERE
      id = #{orderId}
  </update>
</mapper>