<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wannengyongyao.drug.dao.DrugSellerOrderMapper">
  <resultMap id="SellerOrder" type="com.wannengyongyao.drug.model.DrugSellerOrder">
    <id column="order_id" jdbcType="BIGINT" property="orderId" />
    <id column="seller_id" jdbcType="BIGINT" property="sellerId" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="seller_name" jdbcType="VARCHAR" property="sellerName" />
    <result column="drug_store" jdbcType="VARCHAR" property="drugStore" />
    <result column="drug_store_id" jdbcType="INTEGER" property="drugStoreId" />
    <result column="amount" jdbcType="DECIMAL" property="amount" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="status" jdbcType="INTEGER" property="status" />

    <result column="reward_amount" jdbcType="DECIMAL" property="rewardAmount" />
    <result column="discount_amount" jdbcType="DECIMAL" property="discountAmount" />
    <result column="expected_amount" jdbcType="DECIMAL" property="expectedAmount" />
    <result column="service_charge" jdbcType="DECIMAL" property="serviceCharge" />
    <result column="freight" jdbcType="DECIMAL" property="freight" />
    <result column="collection_store" jdbcType="VARCHAR" property="collectionStore" />
    <result column="collection_store_id" jdbcType="INTEGER" property="collectionStoreId" />
    <result column="address" jdbcType="VARCHAR" property="address" />

    <collection property="drugs" ofType="com.wannengyongyao.drug.model.DrugSellerOrderGoods">
      <id column="d_id" jdbcType="INTEGER" property="id" />
      <result column="drug_id" jdbcType="INTEGER" property="drugId" />
      <result column="order_drug_id" jdbcType="INTEGER" property="orderDrugId" />
      <result column="drug_name" jdbcType="VARCHAR" property="drugName" />
      <result column="unit_price" jdbcType="DECIMAL" property="unitPrice" />
      <result column="specifications" jdbcType="VARCHAR" property="specifications" />
      <result column="quantity" jdbcType="INTEGER" property="quantity" />
      <result column="manufacturer" jdbcType="VARCHAR" property="manufacturer" />
    </collection>
  </resultMap>
  <sql id="Base_Column_List">
    id, order_id, user_id, user_name, seller_id, seller_name, drug_store_id, drug_store, amount, create_time,
    status
  </sql>
  <select id="get" parameterType="java.lang.Integer" resultMap="SellerOrder">
    select 
    <include refid="Base_Column_List" />
    from
      drug_seller_order
    where
      id = #{id,jdbcType=INTEGER}
  </select>

  <insert id="insert" parameterType="com.wannengyongyao.drug.model.DrugSellerOrder">
    insert into drug_seller_order (
      order_id,
      user_id,
      user_name,
      seller_id,
      seller_name,
      drug_store_id,
      drug_store,
      amount,
      create_time,
      status)
    values (
      #{orderId,jdbcType=BIGINT},
      #{userId,jdbcType=BIGINT},
      #{userName,jdbcType=VARCHAR},
      #{sellerId,jdbcType=BIGINT},
      #{sellerName,jdbcType=VARCHAR},
      #{drugStoreId,jdbcType=INTEGER},
      #{drugStore,jdbcType=VARCHAR},
      #{amount,jdbcType=DECIMAL},
      #{createTime,jdbcType=TIMESTAMP},
      #{status,jdbcType=INTEGER})
  </insert>

  <select id="getSellerOrder" resultType="com.wannengyongyao.drug.model.DrugSellerOrder">
    SELECT
    <include refid="Base_Column_List" />
    FROM
      drug_seller_order
    WHERE
      order_id = #{orderId}
    AND
      seller_id = #{sellerId}
  </select>

  <update id="changeStatusConfirm">
    UPDATE
      drug_seller_order
    SET
      status = -1
    WHERE
      order_id = #{orderId}
    ;
    UPDATE
      drug_seller_order
    SET
      status = 1
    WHERE
      order_id = #{orderId}
    AND
      seller_id = #{sellerId}
    ;
  </update>

  <!-- 用户订单报价列表 -->
  <select id="listByOrder" resultMap="SellerOrder">
    SELECT
      s.order_id,
      s.seller_id,
      s.seller_name,
      s.status,
      s.drug_store,
      s.drug_store_id,
      s.amount,
      s.service_charge,
      s.expected_amount,
      s.reward_amount,
      s.freight,
      s.collection_store,
      s.address,
      g.id as d_id,
      g.order_id as d_order_id,
      g.seller_id as d_seller_id,
      g.drug_id,
      g.drug_name,
      g.unit_price,
      g.specifications,
      g.quantity,
      g.manufacturer
    FROM
    (
      SELECT
        so.order_id,
        so.seller_id,
        so.seller_name,
        so.drug_store,
        so.drug_store_id,
        so.amount,
        so.create_time,
        so.status,
        o.service_charge,
        o.expected_amount,
        o.reward_amount,
        o.freight,
        o.collection_store,
        o.address
      FROM
        drug_seller_order so
      INNER JOIN
        drug_order o
      ON
        so.order_id = o.id
      WHERE
        so.order_id = #{orderId}
      ORDER BY so.create_time DESC
      LIMIT #{start}, #{pageSize}
    ) s
    INNER JOIN
      drug_seller_order_goods g
    ON
      s.order_id = g.order_id
    AND
      s.seller_id = g.seller_id
    ORDER BY s.create_time DESC
  </select>

  <!-- 卖家待确认（已报价）订单列表 -->
  <select id="listSellerUnconfirmed" resultMap="SellerOrder">
    SELECT
      s.*,
      g.id as d_id,
      g.order_id as d_order_id,
      g.seller_id as d_seller_id,
      g.drug_id,
      g.drug_name,
      g.unit_price,
      g.specifications,
      g.quantity,
      g.manufacturer
    FROM
    (
      SELECT
        o1.order_id,
        o1.seller_id,
        o2.collection_store_id,
        o2.collection_store,
        o2.address,
        o2.service_charge,
        o2.freight,
        o2.expected_amount,
        o2.reward_amount,
        o1.user_id,
        o1.user_name,
        o1.amount,
        o2.create_time
      FROM
        drug_seller_order o1
      INNER JOIN
        drug_order o2
      ON
        o2.id = o1.order_id
      WHERE
        o1.seller_id = #{sellerId}
      AND
        o1.status = 0
      ORDER BY o2.create_time DESC
      LIMIT #{start}, #{pageSize}
    ) s
    INNER JOIN
      drug_seller_order_goods g
    ON
      s.order_id = g.order_id
    AND
      s.seller_id = g.seller_id
    ORDER BY s.create_time DESC
  </select>
</mapper>